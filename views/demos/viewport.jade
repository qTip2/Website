extends ../layouts/demo

block title
	| Collision detection

block styles
	style(type="text/css")
		#drag{
			position: absolute;
			left: 20%;
			top: 30%;
			width: 250px;
			padding: 5px 10px;

			background: #fafafa;
			background: rgba(244,244,244,0.7);

			border: 1px solid #ccc;
			box-shadow: 0 0 5px rgba(0,0,0,.2);

			text-align: center;
			font-weight: bold;
			font-size: 11px;

			cursor: move;
			z-index: 99999;
		}

		#drag h4{ text-align: center; }

		#drag select{ cursor: auto; }

		.ui-tooltip-wiki{
			max-width: 440px;
		}

			.ui-tooltip-wiki .ui-tooltip-content{
				padding: 10px;
				line-height: 12.5px;
			}

			.ui-tooltip-wiki h1{
				margin: 0 0 7px;

				font-size: 1.5em;
				line-height: 1em;
			}

			.ui-tooltip-wiki img{ padding: 0 10px 0 0; }

			.ui-tooltip-wiki p{ margin-bottom: 9px; }
			.ui-tooltip-wiki .note{ margin-bottom: 0; font-style: italic; color: #888; }

block content
	#drag
		h4 Drag me around!
		label(for='my') tooltip
		select#my
			option(value='top left', selected='selected') top left
			option(value='top right') top right
			option(value='top center') top center
			option(value='bottom left') bottom left
			option(value='bottom right') bottom right
			option(value='bottom center') bottom center
			option(value='left top') left top
			option(value='left bottom') left bottom
			option(value='left center') left center
			option(value='right top') right top
			option(value='right bottom') right bottom
			option(value='right center') right center
			option(value='center') center
		br
		label(for='at') target
		select#at
			option(value='top left') top left
			option(value='top right') top right
			option(value='top center') top center
			option(value='bottom left') bottom left
			option(value='bottom right', selected='selected') bottom right
			option(value='bottom center') bottom center
			option(value='left top') left top
			option(value='left bottom') left bottom
			option(value='left center') left center
			option(value='right top') right top
			option(value='right bottom') right bottom
			option(value='right center') right center
			option(value='center') center
		br
		label(for='adjust_method') method
		select#adjust_method
			option(value='none') none
			option(value='flip', selected='selected') flip
			option(value='flip none') flip none
			option(value='flip shift') flip shift
			option(value='shift') shift
			option(value='shift none') shift none
			option(value='shift flip') shift flip
			option(value='none flip') none flip
			option(value='none shift') none shift
		br
		label(for='adjust_x') adjust.x
		select#adjust_x
			option(value='-50') -50
			option(value='0', selected='selected') 0
			option(value='50') 50
		label(for='adjust_y') adjust.y
		select#adjust_y
			option(value='-50') -50
			option(value='0', selected='selected') 0
			option(value='50') 50


block scripts
	script(type='text/javascript', src='#{cdn('jqueryui')}')
	script(type="text/javascript", class="example")
		$(document).ready(function()
		{
			$('#drag').qtip({
				content: {
					text: 'Loading...',
					title: 'Wikipedia - Tawny Owl',
					ajax: {
						url: '<?=WEB_DIR?>/data/tawnyowl.php'
					},
				},
				position: {
					at: $('#at').val(),
					my: $('#my').val(),
					viewport: $(window),
					adjust: {
						method: $('#adjust_method').val(),
						x: parseInt($('#adjust_x').val(), 10) || 0,
						y: parseInt($('#adjust_y').val(), 10) || 0
					}
				},
				show: {
					event: false,
					ready: true
				},
				hide: false,
				style: 'ui-tooltip-wiki'
			})

			// Make it draggable using jQuery UI, and update qTip position when dragging stops
			.draggable({ stop: function() { $(this).qtip('reposition'); } })
			.mousedown(function(e){ e.stopPropagation(); }) // Stop text selection

			// Change the qtip options upon dropdown change
			.children('select').bind('change blur keypress', function() {
				var what = $(this).attr('id').replace(/_/g, '.'),

				val = $(this).val();
				val = !isNaN(parseInt(val)) ? parseInt(val) : val;

				$(this).parent().qtip('option', 'position.' + what, val);
			})
		});